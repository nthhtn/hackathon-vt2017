<!DOCTYPE html>
<html>

<head>
	<title>EzLife</title>
	<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
	<meta charset="utf-8">
	<link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
	<link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
	<link rel="stylesheet" type="text/css" href="/css/index.css">
	<script type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js'></script>
	<script type="text/javascript" src='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js'></script>
</head>

<body>
	<div class="wrapper container">
		<div class="row">
			<div id="geo-info" class='col-md-3 col-sm-12 col-xs-12'>
				<div id="list-input" class="col-md-12 col-sm-12 col-xs-12">
					<div class="col-md-1 col-sm-1 col-xs-1"><img src="/images/back-btn.png" style="cursor: pointer;"></div>
					<div class="col-md-11 col-sm-11 col-xs-11">
						<div class="form-group col-md-12 col-sm-12 col-xs-12">
							<span class='col-md-2 col-sm-2 col-xs-2'><img src="/images/here-icon.png"></span>
							<input type="text" class="form-control col-md-10 col-sm-10 col-xs-10" id="pos-start" placeholder="Select start">
						</div>
						<div class="form-group col-md-12 col-sm-12 col-xs-12">
							<span class='col-md-2 col-sm-2 col-xs-2'><img src="/images/mapmarker-icon.png"></span>
							<input type="text" class="form-control col-md-10 col-sm-10 col-xs-10" id="pos-dest" placeholder="Select destination">
						</div>
					</div>
				</div>
				<div id="list-mode" class='col-md-12 col-sm-12 col-xs-12'>
					<div class="col-md-3 col-sm-3 col-xs-3 item-mode active" id='DRIVING'><img src="/images/ic-directions-car-24-px-copy.png"></div>
					<div class="col-md-3 col-sm-3 col-xs-3 item-mode" id='TRANSIT'><img src="/images/ic-directions-railway-24-px-copy.png"></div>
					<div class="col-md-3 col-sm-3 col-xs-3 item-mode" id='BICYCLING'><img src="/images/ic-directions-bike-24-px-copy.png"></div>
					<div class="col-md-3 col-sm-3 col-xs-3 item-mode" id='WALKING'><img src="/images/ic-directions-walk-24-px-copy.png"></div>
				</div>
			</div>
			<div id="map-info" class='col-md-9 col-sm-12 col-xs-12'>
				<div id="map"></div>
			</div>
		</div>
	</div>
	<script>
	var map;
	var geocoder;
	var startLocation;
	var destLocation;
	var startAddress;
	var destAddress;
	var directionsService;
	var directionsDisplay;
	var mode = 'DRIVING';
	var contentString = '<div id="content">' +
		'<div id="siteNotice" style="float:left">' +
		'<img src="/images/photo.png">' +
		'</div>' +
		'<div style="float:right;padding:6px"><h4 id="firstHeading" class="firstHeading">Road reconstruction</h4>' +
		'<div id="bodyContent">' +
		'<p>There are many plotholes... Beware!</p></div><div style="clear:both"></div>' +
		'<p style="font-size:10px">591 Tran Hung Dao, Sa Dec, Dong Thap</p>' +
		'<p style="font-size:10px;padding:3px;color:#ffffff;background-color:#cbd2dc;display:inline-block">1 day ago</p>' +
		'</div>' +
		'</div>';

	function LocationControl(controlDiv, map) {
		var controlUI = document.createElement('div');
		controlUI.style.backgroundColor = 'transparent';
		controlUI.style.textAlign = 'center';
		controlUI.title = 'Click to recenter the map';
		controlDiv.appendChild(controlUI);
		var controlText = document.createElement('div');
		controlText.style.cursor = 'pointer';
		controlText.innerHTML = '<img src="/images/location.png">';
		controlUI.appendChild(controlText);
		controlUI.addEventListener('click', function() {
			if (navigator.geolocation) {
				navigator.geolocation.getCurrentPosition(function(position) {
					var pos = {
						lat: position.coords.latitude,
						lng: position.coords.longitude
					};
					var image = {
						url: 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Button_Icon_Orange.svg/20px-Button_Icon_Orange.svg.png'
					};
					var marker = new google.maps.Marker({
						position: pos,
						map: map,
						icon: image
					});
					map.setCenter(pos);
				});
			}
		});
	};

	function openFile(file) {
		var input = file.target;

		var reader = new FileReader();
		reader.onload = function() {
			var dataURL = reader.result;
			var output = document.getElementById('output');
			output.src = dataURL;
		};
		reader.readAsDataURL(input.files[0]);
	};

	function CameraControl(controlDiv, map) {
		var controlUI = document.createElement('div');
		controlUI.style.backgroundColor = 'transparent';
		controlUI.style.textAlign = 'center';
		controlUI.title = 'Click to recenter the map';
		controlDiv.appendChild(controlUI);
		var controlText = document.createElement('div');
		controlText.style.cursor = 'pointer';
		controlText.innerHTML = '<div class="image-upload"><label for="camera-input"><img src="/images/camera.png"/></label><input type="file" capture="camera" accept="image/*" id="camera-input" name="camera-input"/></div>';
		controlUI.appendChild(controlText);
		controlUI.addEventListener('click', function(e) {
			document.getElementById('camera-input').onchange = function(evt) {
				var tgt = evt.target || window.event.srcElement;
				var files = tgt.files;
				var fr = new FileReader();
				fr.onload = function() {
					console.log(fr.result);
				}
				fr.readAsDataURL(files[0]);
			}
		});
	};

	function initMap() {
		map = new google.maps.Map(document.getElementById('map'), {
			center: { lat: 10.3640428, lng: 107.0837621 },
			zoom: 15,
			zoomControl: false,
			streetViewControl: false
		});
		geocoder = new google.maps.Geocoder();
		directionsService = new google.maps.DirectionsService();
		directionsDisplay = new google.maps.DirectionsRenderer({ suppressMarkers: true });

		var locationControlDiv = document.createElement('div');
		var locationControl = new LocationControl(locationControlDiv, map);
		locationControlDiv.index = 1;
		map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(locationControlDiv);

		var cameraControlDiv = document.createElement('div');
		var cameraControl = new CameraControl(cameraControlDiv, map);
		cameraControlDiv.index = 2;
		map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(cameraControlDiv);

		directionsDisplay.setMap(map);
	};

	$('#pos-start').keydown(function(e) {
		startAddress = $(this).val();
		if (e.which == 13) {
			geocoder.geocode({ address: startAddress }, function(results, status) {
				if (status === 'OK') {
					startLocation = results[0].geometry.location;
					if (startLocation && destLocation) {
						findRoute(mode);
					}
				}
			});
		}
	});

	$('#pos-dest').keydown(function(e) {
		destAddress = $(this).val();
		if (e.which == 13) {
			geocoder.geocode({ address: destAddress }, function(results, status) {
				if (status === 'OK') {
					destLocation = results[0].geometry.location;
					if (startLocation && destLocation) {
						findRoute(mode);
					}
				}
			});
		}
	});

	function makeMarker(position, icon, title) {
		new google.maps.Marker({
			position: position,
			map: map,
			icon: icon,
			title: title
		});
	}

	function openInfo(marker, infowindow) {
		marker.addListener('click', function() {
			infowindow.open(map, marker);
		});
	};

	function findRoute(transportMode) {
		directionsService.route({
			origin: startLocation,
			destination: destLocation,
			travelMode: transportMode
		}, function(response, status) {
			if (status === 'OK') {
				var leg = response.routes[0].legs[0];
				for (var i = 0; i < leg.steps.length; i++) {
					var step = leg.steps[i];
					if (i % 4 != 0) {
						var marker = new google.maps.Marker({
							position: step.lat_lngs[1],
							icon: '/images/point.png',
							map: map,
							title: 'Road reconstruction'
						});
						var infowindow = new google.maps.InfoWindow({
							content: contentString
						});
						openInfo(marker, infowindow);
					}
				}
				var startIcon = new google.maps.MarkerImage('images/here-pin.png');
				var destIcon = new google.maps.MarkerImage('images/mapmarker-icon@2x.png');
				makeMarker(leg.start_location, startIcon, "Start");
				makeMarker(leg.end_location, destIcon, 'Destination');
				directionsDisplay.setDirections(response);
			} else {
				window.alert('Directions request failed due to ' + status);
			}
		});
	};

	$('.item-mode').on('click', function() {
		if (!$(this).hasClass('active')) {
			var active = $($('.item-mode.active')[0]);
			active.removeClass('active');
			$(this).addClass('active');
			mode = $(this).attr('id');
		}
	});
	</script>
	<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAHWkUPVU8hx82hdh0PLQuq7V5QZvRsEYE&callback=initMap"></script>
	<!-- <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAy7RMk2wSnPEdfW0dJJLp9VRHanWUJ-WQ&callback=initMap"></script>
	<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD2xMB0ccW7UAPS8QI3qP5z-qRhNBbhJRE&callback=initMap"></script> -->
</body>

</html>